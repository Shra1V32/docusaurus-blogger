"use strict";(self.webpackChunktataplay_autoupdater=self.webpackChunktataplay_autoupdater||[]).push([[155],{6075:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>s,toc:()=>l});var o=a(5893),r=a(1151);const n={sidebar_position:2},i="Migration notice",s={id:"Tata Play Playlist Generator - ForceGT/migrationNotice",title:"Migration notice",description:"This repository is now maintained via Github Actions only, and I don't personally maintain it. It initially began as a proof of concept code for being able to generate an m3u from Tata Play servers. It was not very user friendly, as it was just done for curiosity. Shravan has rendered my research into a very user friendly method of generation, which you can take a look here. Saif has also done a brilliant job here. However, if you've come here and are reading this, kindly star the repository and go to any one of these",source:"@site/docs/Tata Play Playlist Generator - ForceGT/migrationNotice.md",sourceDirName:"Tata Play Playlist Generator - ForceGT",slug:"/Tata Play Playlist Generator - ForceGT/migrationNotice",permalink:"/docusaurus-blogger/docs/Tata Play Playlist Generator - ForceGT/migrationNotice",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Tata Play Playlist Generator - ForceGT/migrationNotice.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docusaurus-blogger/docs/Tata Play Playlist Generator - ForceGT/intro"},next:{title:"Requirements",permalink:"/docusaurus-blogger/docs/Tata Play Playlist Generator - ForceGT/requirements"}},c={},l=[];function d(e){const t={a:"a",h1:"h1",p:"p",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"migration-notice",children:"Migration notice"}),"\n",(0,o.jsxs)(t.p,{children:["This repository is now maintained via Github Actions only, and I don't personally maintain it. It initially began as a proof of concept code for being able to generate an m3u from Tata Play servers. It was not very user friendly, as it was just done for curiosity. Shravan has rendered my research into a very user friendly method of generation, which you can take a look ",(0,o.jsx)(t.a,{href:"https://github.com/Shra1V32/TataSky-Playlist-AutoUpdater",children:"here"}),". Saif has also done a brilliant job ",(0,o.jsx)(t.a,{href:"https://github.com/saifshaikh1805/tata-sky-m3u",children:"here"}),". However, if you've come here and are reading this, kindly star the repository and go to any one of these"]})]})}function u(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,t,a)=>{a.d(t,{Z:()=>s,a:()=>i});var o=a(7294);const r={},n=o.createContext(r);function i(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);